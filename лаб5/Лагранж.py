x = [0.01, 0.06, 0.11, 0.16, 0.21, 0.26, 0.31, 0.36, 0.41, 0.46, 0.51, 0.56]
y = [0.991824, 0.951935, 0.91365, 0.876905, 0.841638, 0.807789, 0.775301, 0.74412, 0.714193, 0.68547, 0.657902, 0.631442]


def proiz_1(xx, yy):
	"Функция вычисления первой производной интерполяцым многочленом Ньютона"
	ans = []
	h = xx[1] - xx[0]

	# Вычисляем производную в начальных точках
	res = (-25 * yy[0] + 48 * yy[1] - 36 * yy[2] + 16 * yy[3] - 3 * yy[4]) / (12 * h)
	ans.append(res)
	res = (-3 * yy[0] - 10 * yy[1] + 18 * yy[2] - 6 * yy[3] + yy[4]) / (12 * h)
	ans.append(res)

	# Вычисляем производную в средних точках
	for i in range(2, 10): 
		res = (yy[i - 2] - 8 * yy[i - 1] + 8 * yy[i + 1] - yy[i + 2]) / (12 * h)
		ans.append(res)

	# Вычисляем производную в последних точках
	res = (-yy[7] + 6 * yy[8] - 18 * yy[9] + 10 * yy[10] + 3 * yy[11]) / (12 * h)
	ans.append(res)
	res = (3 * yy[7] - 16 * yy[8] + 36 * yy[9] - 48 * yy[10] + 25 * yy[11]) / (12 * h)
	ans.append(res)
	return ans

def proiz_2(xx, yy):
	"Функция вычисления второй производной интерполяцым многочленом Ньютона" 
	ans = []
	h = xx[1] - xx[0]

	# Вычисляем производную в начальной точке
	res = (2.0 * yy[0] - 5.0 * yy[1] + 4.0 * yy[2] - yy[3]) / (h ** 2)
	ans.append(res)

	# Вычисляем производную в средних точках
	for i in range(1, 11): 
		res = (yy[i - 1] - 2 * yy[i] + yy[i + 1]) / (h ** 2)
		ans.append(res)
	
	# Вычисляем производную в конечной точке
	res = (-yy[8] + 4 * yy[9] - 5 * yy[10] + 2 * yy[11]) / (h ** 2);
	ans.append(res)
	return ans

print("  x   |   y    |    y'   |   y''  ")
for i in range(len(x)):
    print("", x[i], "|", "%.4f" % y[i], "|", "%.4f" % proiz_1(x, y)[i],"|", "%.4f" % proiz_2(x, y)[i])

