from sympy import *
import numpy as np

granic = [-4,-3] #Левая и правая границы (будем считать известными)
epsilon = 0.1 

i = 0 # Счетчик для значений подвижного конца отрезка
b = [0] # Значения подвижного конца отрезка

x = symbols('x')
#y = x ** 3 - 3 * x ** 2 + 12 * x - 12 
y = x ** 3 - 3 * x ** 2 - 24 * x + 10

def function(z):
	"========Функция расчета f(x), f(x)' и f(x)'' ================================"
	f = lambdify(x, z, 'numpy')
	return f

def check(module, epsilon, fbn):
	"========Функция проверки конца алгоритма====================================="
	if module < epsilon:
		print("======================================================================================")
		print("Искомое решение = ", "%.5f" % b[i], ", точность -", "%.5f" % module, "< 0.001")
		print("======================================================================================")
		exit()

	if (abs(fbn) < epsilon) :
		print("=====================================================")
		print("Искомое решение = ", "%.5f" % b[i], ", |f(b)| ", "%.5f" % abs(fbn), "< 0.001")
		print("=====================================================")
		exit()

fz = function(y) # Воспользоваться функцией при f(x) = x^3 - 3*x^2 + 12*x - 12
f_1 = y.diff(x) # Первая производаня
f_2 = f_1.diff(x) # Вторая производная
fz_1 = function(f_1) # Воспользоваться функцией для f(x)'
fz_2 = function(f_2) # Воспользоваться функцией для f(x)''

# Определим неподвижный конец отрезка и обозначим его за "а", иной конец отрезка обозначим за "b" 
# Для проверки воспользуемся формулой f(x) * f(x)'' > 0 , тогда конец можно считать неподвижным 
if ( fz(granic[0]) * fz_2(granic[0]) ) > 0 :
	print("Поскольку произведение f(" , granic[0] , ")", fz(granic[0]), "и f''(" , granic[0] , ") " , fz_2(granic[0]), " > 0 , то a неподвижный конец отрезка" ) 
	a = granic[0]
	b[i] = granic[1]
else:
	if (fz(granic[1]) * fz_2(granic[1])) > 0:
		print("Поскольку  произведение f(" , granic[1] , ")", fz(granic[1]), "и f''(" , granic[1] , ") " , fz_2(granic[1]), " > 0 , то b неподвижный конец отрезка" )
		a = granic[1]
		b[i] = granic[0]
	else:
		print("Не удалось найти неподвижный конец отрезка")
		exit() 

fan = fz(a) # Рассчитаем значение функции f(x) для неподвижного конца отрезка
fbn = fz(b[i]) # Рассчитаем значение функции f(x) для конца отрезка, который будем сдвигать
module = abs(a - b[i])
print("An           |Bn           |f(An)         |f(Bn)        ||bn i+1 - bn i|")
n = 1
while (module > epsilon) and (abs(fbn) > epsilon):
	fbn = fz(b[i]) # Рассчитаем значение функции f(x) для конца отрезка, который будем сдвигать
	fdb = fz_1(b[i]) # Рассчитаем значение функции f(x)' для конца отрезка, который будем сдвигать
	if i != 0 :
		module = abs(b[i-1] - b[i])
	#print("%.5f" % a, "     ", "%.5f" % b[i], "     ", "%.5f" % fan,"     ","%.5f" % fbn,"     ", "%.5f" % module)
	print("  ", n, "Итерация\na = ", a, "\nb = ","%.4f" % b[i], "\nF(a) = ", "%.3f" % fan, "\nF(b) = ", "%.3f" % fbn,"\n|b i+1 - b i| =", "%.5f" % module)
	n += 1
	check(module, epsilon, fbn) 
	b.append( b[i] - ( fbn / fdb ) )
	i += 1